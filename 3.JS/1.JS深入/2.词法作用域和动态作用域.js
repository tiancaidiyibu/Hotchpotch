/* 作用域是规定了如何查找变量，也就是当前执行代码的访问权限。
ES6之前只有全局作用域和函数作用域。
JS采用了词法作用域，也就是静态作用域。 */


// 词法作用域，在函数的作用域在函数定义的时候就决定了
// 动态作用域是函数在调用的时候决定的

// var value = 1;
// function foo() {
//     console.log(value);
// }
// function bar() {
//     var value = 2;
//     foo();
// }
// bar();
// foo函数执行，采用静态作用域的话，会先从foo函数内部查找是否有局部变量value，如果没有，就根据书写的位置查找上一层代码，也就是全局作用域，因此输出结果为1.
// foo函数执行，如果采用动态作用域，会先从foo函数内部查找是否有局部变量value，如果没有，会先从foo函数内部查找是否有局部变量value

// 拓展：bash就是动态作用域
